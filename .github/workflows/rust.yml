name: Rust

on:
  push:
    branches: [ "main" ]
    tags:
        - 'v*'
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      # pull-requests: write
      # repository-projects: write
    steps:
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libasound2-dev libasound2-data libasound2
        version: 1.0
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose util
    # - name: Release
    #   id: release
    #   uses: softprops/action-gh-release@v2
    #   if: startsWith(github.ref, 'refs/tags/')
    #   with:
    #     files: |
    #       README.md
    #       systemd/wled-doppler.service
    #       target/release/aoer-wled-doppler
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: move build
      run: mv ./target/release/aoer-wled-doppler ./
    - name: Zip
      run: zip -r ${{ github.event.repository.name }}-${{ vars.RUNNER_OS }}-${{ vars.RUNNER_ARCH }}.zip README.md systemd/wled-doppler.service aoer-wled-doppler
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}-${{ vars.RUNNER_OS }}-${{ vars.RUNNER_ARCH }}.zip
        asset_name: ${{ github.event.repository.name }}-${{ vars.RUNNER_OS }}-${{ vars.RUNNER_ARCH }}.zip
        asset_content_type: application/zip
